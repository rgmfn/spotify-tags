export interface TypographyClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element if `level="h1"`. */
    h1: string;
    /** Styles applied to the root element if `level="h2"`. */
    h2: string;
    /** Styles applied to the root element if `level="h3"`. */
    h3: string;
    /** Styles applied to the root element if `level="h4"`. */
    h4: string;
    /** Styles applied to the root element if `level="h5"`. */
    h5: string;
    /** Styles applied to the root element if `level="h6"`. */
    h6: string;
    /** Styles applied to the root element if `level="body1"`. */
    body1: string;
    /** Styles applied to the root element if `level="body2"`. */
    body2: string;
    /** Styles applied to the root element if `level="body3"`. */
    body3: string;
    /** Styles applied to the root element if `nowrap={true}`. */
    noWrap: string;
    /** Styles applied to the root element if `gutterBottom={true}`. */
    gutterBottom: string;
    /** Styles applied to the startDecorator element */
    startDecorator: string;
    /** Styles applied to the endDecorator element */
    endDecorator: string;
    /** Styles applied to the root element if `color="primary"`. */
    colorPrimary: string;
    /** Styles applied to the root element if `color="neutral"`. */
    colorNeutral: string;
    /** Styles applied to the root element if `color="danger"`. */
    colorDanger: string;
    /** Styles applied to the root element if `color="info"`. */
    colorInfo: string;
    /** Styles applied to the root element if `color="success"`. */
    colorSuccess: string;
    /** Styles applied to the root element if `color="warning"`. */
    colorWarning: string;
    /** Styles applied to the root element when color inversion is triggered. */
    colorContext: string;
    /** Styles applied to the root element if `variant="plain"`. */
    variantPlain: string;
    /** Styles applied to the root element if `variant="outlined"`. */
    variantOutlined: string;
    /** Styles applied to the root element if `variant="soft"`. */
    variantSoft: string;
    /** Styles applied to the root element if `variant="solid"`. */
    variantSolid: string;
}
export type TypographyClassKey = keyof TypographyClasses;
export declare function getTypographyUtilityClass(slot: string): string;
declare const typographyClasses: TypographyClasses;
export default typographyClasses;
