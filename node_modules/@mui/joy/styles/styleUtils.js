import _extends from "@babel/runtime/helpers/esm/extends";
/**
 * internal utility
 */
// eslint-disable-next-line import/prefer-default-export
export const resolveSxValue = ({
  theme,
  ownerState
}, key, defaultValue) => {
  let parsedValue;
  let sxObject = {};
  function resolveSx(sxProp) {
    if (typeof sxProp === 'function') {
      const result = sxProp(theme);
      resolveSx(result);
    } else if (Array.isArray(sxProp)) {
      sxProp.forEach(sxItem => {
        if (typeof sxItem !== 'boolean') {
          resolveSx(sxItem);
        }
      });
    } else if (typeof sxProp === 'object') {
      sxObject = _extends({}, sxObject, sxProp);
    }
  }
  if (ownerState.sx) {
    resolveSx(ownerState.sx);
    const value = sxObject[key];
    if (typeof value === 'string' || typeof value === 'number') {
      if (key === 'borderRadius') {
        var _theme$vars;
        if (typeof value === 'number') {
          return `${value}px`;
        }
        parsedValue = ((_theme$vars = theme.vars) == null ? void 0 : _theme$vars.radius[value]) || value;
      }
    }
  }
  return parsedValue || defaultValue;
};