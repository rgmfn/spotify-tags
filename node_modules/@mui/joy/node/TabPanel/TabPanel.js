"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _utils = require("@mui/utils");
var _base = require("@mui/base");
var _TabsUnstyled = require("@mui/base/TabsUnstyled");
var _TabPanelUnstyled = require("@mui/base/TabPanelUnstyled");
var _utils2 = require("@mui/base/utils");
var _styles = require("../styles");
var _SizeTabsContext = _interopRequireDefault(require("../Tabs/SizeTabsContext"));
var _tabPanelClasses = require("./tabPanelClasses");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["children", "value", "component", "size"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const useUtilityClasses = ownerState => {
  const {
    hidden,
    size
  } = ownerState;
  const slots = {
    root: ['root', hidden && 'hidden', size && `size${(0, _utils.unstable_capitalize)(size)}`]
  };
  return (0, _base.unstable_composeClasses)(slots, _tabPanelClasses.getTabPanelUtilityClass, {});
};
const TabPanelRoot = (0, _styles.styled)('div', {
  name: 'JoyTabPanel',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => (0, _extends2.default)({
  display: ownerState.hidden ? 'none' : 'initial'
}, ownerState.orientation === 'horizontal' && {
  paddingBlockStart: 'var(--Tabs-gap)'
}, ownerState.orientation === 'vertical' && {
  paddingInlineStart: 'var(--Tabs-gap)'
}, ownerState.size === 'sm' && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === 'md' && {
  fontSize: theme.vars.fontSize.md
}, ownerState.size === 'lg' && {
  fontSize: theme.vars.fontSize.lg
}, {
  flexGrow: 1,
  fontFamily: theme.vars.fontFamily.body
}));
const TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {
  const props = (0, _styles.useThemeProps)({
    props: inProps,
    name: 'JoyTabPanel'
  });
  const {
    orientation
  } = (0, _TabsUnstyled.useTabContext)() || {
    orientation: 'horizontal'
  };
  const tabsSize = React.useContext(_SizeTabsContext.default);
  const {
      children,
      component,
      size: sizeProp
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  const {
    hidden,
    getRootProps
  } = (0, _TabPanelUnstyled.useTabPanel)(props);
  const size = sizeProp != null ? sizeProp : tabsSize;
  const ownerState = (0, _extends2.default)({}, props, {
    orientation,
    hidden,
    size
  });
  const classes = useUtilityClasses(ownerState);
  const tabPanelRootProps = (0, _utils2.useSlotProps)({
    elementType: TabPanelRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      role: 'tabpanel',
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(TabPanelRoot, (0, _extends2.default)({}, tabPanelRootProps, {
    children: !hidden && children
  }));
});
process.env.NODE_ENV !== "production" ? TabPanel.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: _propTypes.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: _propTypes.default.elementType,
  /**
   * The size of the component.
   */
  size: _propTypes.default /* @typescript-to-proptypes-ignore */.oneOfType([_propTypes.default.oneOf(['sm', 'md', 'lg']), _propTypes.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object, _propTypes.default.bool])), _propTypes.default.func, _propTypes.default.object]),
  /**
   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.
   */
  value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired
} : void 0;
var _default = TabPanel;
exports.default = _default;