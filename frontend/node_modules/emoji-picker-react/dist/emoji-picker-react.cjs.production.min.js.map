{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/DomUtils/focusElement.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/dataUtils/emojiSelectors.ts","../src/data/skinToneVariations.ts","../src/config/cdnUrls.ts","../src/config/categoryConfig.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/useConfig.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/hooks/useDebouncedState.ts","../src/hooks/useDisallowedEmojis.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/components/body/EmojiVariationPicker.tsx","../src/components/Layout/Flex.tsx","../src/components/header/SkinTonePicker.tsx","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/DomUtils/scrollTo.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../src/components/atoms/Button.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useIsEmojiHidden.ts","../src/DomUtils/keyboardNavigation.ts","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/hooks/useShouldShowSkinTonePicker.ts","../src/components/Layout/Space.tsx","../src/components/Layout/Absolute.tsx","../src/components/Layout/Relative.tsx","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/components/header/Search.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/DomUtils/isDarkTheme.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event)) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl, ViewOnlyEmoji } from './Emoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n}) {\n  if (!unified) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","Object","entries","reduce","acc","skinTonesMapped","mapped","skinTone","assign","emojiNames","emoji","name","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","category","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","values","flat","setTimeout","Emoji","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","mergeConfig","userConfig","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","onEmojiClick","event","basePreviewConfig","searchPlaceHolder","SEARCH","skinTonesDisabled","FREQUENT","theme","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","window","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","added_in","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","searchIndex","replace","forEach","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","Direction","FlexDirection","SkinTonePickerDirection","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","Boolean","parentElement","_element$parentElemen","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","toLowerCase","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","Button","props","type","className","clsx","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","size","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","suggestedItem","original","key","EmojiList","emojiList","index","RenderCategory","filter","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","isEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","pointing-up","concat","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","updateSuggested","onClick","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","Flex","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","entry","id","getAttribute","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","autoFocus","onChange","setFilterRef","setFilter","setter","useSetFilterRef","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","useFilter","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","focusNextSkinTone","exitLeft","currentSkinTone","focusPrevSkinTone","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","AUTO","matchMedia","useThemeConfig","searchModeActive","usePickerSizeConfig","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","onType","ArrowLeft","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","EmojiPickerReact"],"mappings":"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"}